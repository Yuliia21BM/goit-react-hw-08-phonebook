{"version":3,"file":"static/js/919.4aaf490d.chunk.js","mappings":"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","sources":["components/redux/contacts/contactSelectors.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/EditModal/EditModal.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectTextFilter = state => state.filter.value;\n","import React from 'react';\nimport { nanoid } from 'nanoid';\nimport { Formik, Form, Field } from 'formik';\nimport { useState } from 'react';\nimport { selectContacts } from 'components/redux/contacts/contactSelectors';\n\nimport {\n  FormErrorMessage,\n  FormControl,\n  FormLabel,\n  Input,\n  Button,\n  Flex,\n  Box,\n  Heading,\n} from '@chakra-ui/react';\n\nimport { addContact } from 'components/redux/contacts/contactOperations';\n\nimport { Notification, patternName } from 'components/utiles';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nconst nameId = nanoid();\nconst numberId = nanoid();\n\nexport const ContactForm = ({ onClose }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const data = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const formSubmitHandler = (_, { resetForm }) => {\n    const invalidName = data?.find(state => state.name === name);\n\n    if (invalidName) {\n      Notification(name);\n      resetForm();\n      return;\n    }\n    dispatch(addContact({ name, number }));\n    onClose();\n    resetForm();\n  };\n  return (\n    <Flex width=\"full\" align=\"center\" justifyContent=\"center\">\n      <Box p={2}>\n        <Box textAlign=\"center\">\n          <Heading>Add new contact</Heading>\n        </Box>\n        <Box my={4} textAlign=\"left\">\n          <Formik initialValues={initialValues} onSubmit={formSubmitHandler}>\n            {props => (\n              <Form>\n                <Field name=\"name\" id={nameId}>\n                  {({ field, form }) => (\n                    <FormControl\n                      isRequired\n                      isInvalid={form.errors.name && form.touched.name}\n                    >\n                      <FormLabel>Name</FormLabel>\n                      <Input\n                        {...field}\n                        value={name}\n                        type=\"text\"\n                        placeholder=\"John Doe\"\n                        _placeholder={{ opacity: 1, color: 'teal.700' }}\n                        pattern={patternName}\n                        onChange={e => setName(e.target.value)}\n                      />\n                      <FormErrorMessage>{form.errors.name}</FormErrorMessage>\n                    </FormControl>\n                  )}\n                </Field>\n                <Field name=\"number\" patern={patternName} id={numberId}>\n                  {({ field, form }) => (\n                    <FormControl\n                      isRequired\n                      mt={4}\n                      isInvalid={form.errors.name && form.touched.name}\n                    >\n                      <FormLabel>Nunber</FormLabel>\n                      <Input\n                        {...field}\n                        value={number}\n                        type=\"telephone\"\n                        placeholder=\"0960000000\"\n                        _placeholder={{ opacity: 1, color: 'teal.700' }}\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        onChange={e => setNumber(e.target.value)}\n                      />\n                      <FormErrorMessage>{form.errors.name}</FormErrorMessage>\n                    </FormControl>\n                  )}\n                </Field>\n                <Button\n                  type=\"submit\"\n                  colorScheme=\"yellow\"\n                  variant=\"outline\"\n                  width=\"full\"\n                  mt={6}\n                >\n                  Submit\n                </Button>\n              </Form>\n            )}\n          </Formik>\n        </Box>\n      </Box>\n    </Flex>\n  );\n};\n","// import { Box } from '../Box';\nimport { nanoid } from 'nanoid';\nimport { useDispatch } from 'react-redux';\nimport { chatngeFilterValue } from '../redux/contacts/filterSlice';\nimport { useState, useEffect } from 'react';\nimport { useDebounce } from 'components/utiles';\nimport { Box, Text, Input } from '@chakra-ui/react';\n\nconst filterId = nanoid();\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const [filter, setFilter] = useState('');\n  const debounsedfilterValue = useDebounce(filter, 500);\n\n  useEffect(() => {\n    dispatch(chatngeFilterValue(debounsedfilterValue));\n  }, [debounsedfilterValue, dispatch]);\n\n  const handleFilterChange = e => {\n    setFilter(e.currentTarget.value.toLowerCase());\n  };\n  return (\n    <Box display=\"flex\" flexDirection=\"column\">\n      <Text fontSize=\"xl\" mb=\"10px\" as=\"cite\">\n        Finde contact by name\n      </Text>\n      <Input\n        variant=\"flushed\"\n        placeholder=\"John Doe\"\n        _placeholder={{ opacity: 1, color: 'teal.700' }}\n        width=\"400px\"\n        value={filter}\n        type=\"text\"\n        id={filterId}\n        onChange={handleFilterChange}\n      />\n    </Box>\n  );\n};\n","import React from 'react';\nimport { nanoid } from 'nanoid';\nimport { Formik, Form, Field } from 'formik';\nimport { useState } from 'react';\n\nimport {\n  FormControl,\n  FormLabel,\n  Input,\n  Button,\n  Flex,\n  Box,\n  Heading,\n} from '@chakra-ui/react';\n\nimport { editContact } from 'components/redux/contacts/contactOperations';\nimport { patternName } from 'components/utiles';\nimport { useDispatch } from 'react-redux';\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nconst nameId = nanoid();\nconst numberId = nanoid();\n\nexport const EditModal = ({\n  onClose,\n  name: prevName,\n  number: prevNumber,\n  id,\n}) => {\n  const [name, setName] = useState(prevName);\n  const [number, setNumber] = useState(prevNumber);\n  const dispatch = useDispatch();\n\n  const formSubmitHandler = (_, { resetForm }) => {\n    dispatch(editContact({ name, number, id }));\n    onClose();\n    resetForm();\n  };\n  return (\n    <Flex width=\"full\" align=\"center\" justifyContent=\"center\">\n      <Box p={2}>\n        <Box textAlign=\"center\">\n          <Heading>Edit contact</Heading>\n        </Box>\n        <Box my={4} textAlign=\"left\">\n          <Formik initialValues={initialValues} onSubmit={formSubmitHandler}>\n            {props => (\n              <Form>\n                <Field name=\"name\" id={nameId}>\n                  {({ field, form }) => (\n                    <FormControl\n                      isRequired\n                      isInvalid={form.errors.name && form.touched.name}\n                    >\n                      <FormLabel>Name</FormLabel>\n                      <Input\n                        {...field}\n                        value={name}\n                        type=\"text\"\n                        placeholder=\"John Doe\"\n                        _placeholder={{ opacity: 1, color: 'teal.700' }}\n                        pattern={patternName}\n                        onChange={e => setName(e.target.value)}\n                      />\n                    </FormControl>\n                  )}\n                </Field>\n                <Field name=\"number\" patern={patternName} id={numberId}>\n                  {({ field, form }) => (\n                    <FormControl\n                      isRequired\n                      mt={4}\n                      isInvalid={form.errors.name && form.touched.name}\n                    >\n                      <FormLabel>Nunber</FormLabel>\n                      <Input\n                        {...field}\n                        value={number}\n                        type=\"telephone\"\n                        placeholder=\"0960000000\"\n                        _placeholder={{ opacity: 1, color: 'teal.700' }}\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        onChange={e => setNumber(e.target.value)}\n                      />\n                    </FormControl>\n                  )}\n                </Field>\n                <Button\n                  type=\"submit\"\n                  colorScheme=\"yellow\"\n                  variant=\"outline\"\n                  width=\"full\"\n                  mt={6}\n                >\n                  Submit\n                </Button>\n              </Form>\n            )}\n          </Formik>\n        </Box>\n      </Box>\n    </Flex>\n  );\n};\n","import { Avatar, Button, Flex, Text, useDisclosure } from '@chakra-ui/react';\nimport { RiEditLine } from 'react-icons/ri';\nimport { BiPhoneCall } from 'react-icons/bi';\nimport { createPortal } from 'react-dom';\nimport { ModalWrap } from 'components/ModalWrap/ModalWrap';\nimport { EditModal } from 'components/EditModal/EditModal';\nimport { deleteContact } from 'components/redux/contacts/contactOperations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectIsLoading } from 'components/redux/contacts/contactSelectors';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const ContactItem = ({ id, name, number }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const loading = useSelector(selectIsLoading);\n  const dispatch = useDispatch();\n  return (\n    <Flex key={id} alignItems=\"center\" justifyContent={'space-between'}>\n      <Avatar name={name} colorScheme=\"twitter\" size=\"md\" />\n      <Text fontSize=\"xl\" as=\"cite\">\n        {' '}\n        {name}:\n      </Text>\n      <Text fontSize=\"xl\"> {number}</Text>\n      <Flex gap={'20px'}>\n        <Button variant=\"outline\" colorScheme=\"teal\">\n          <a href={`tel:${number}`}>\n            <BiPhoneCall />\n          </a>\n        </Button>\n        <Button\n          isLoading={loading}\n          colorScheme=\"red\"\n          variant=\"outline\"\n          onClick={() => dispatch(deleteContact(id))}\n        >\n          Delete\n        </Button>\n        <Button onClick={onOpen} variant=\"outline\" colorScheme=\"yellow\">\n          <RiEditLine />\n        </Button>\n      </Flex>\n      {createPortal(\n        <ModalWrap isOpen={isOpen} onClose={onClose}>\n          <EditModal onClose={onClose} name={name} number={number} id={id} />\n        </ModalWrap>,\n        modalRoot\n      )}\n    </Flex>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { selectTextFilter } from 'components/redux/contacts/contactSelectors';\nimport { selectContacts } from 'components/redux/contacts/contactSelectors';\nimport GiffSadDog from '../../images/sad-dog.gif';\n\nimport { Box, Flex, Image, Text } from '@chakra-ui/react';\nimport { ContactItem } from 'components/ContactItem/ContactItem';\n\nconst getFilteredContacts = (contacts, filterValue) => {\n  if (filterValue === '') {\n    return contacts;\n  }\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filterValue)\n  );\n};\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filterValue = useSelector(selectTextFilter);\n\n  const visibleContacts = getFilteredContacts(contacts, filterValue);\n\n  return (\n    <Box p=\"10px\" pt=\"40px\">\n      <Flex gap={'20px'} flexDirection=\"column\">\n        {visibleContacts?.length === 0 ? (\n          <>\n            <Text textAlign=\"center\" as=\"cite\" size=\"xl\">\n              There are no contacts here yet\n            </Text>\n            <Image\n              src={GiffSadDog}\n              alt=\"Sad dog\"\n              w={'500px'}\n              alignSelf=\"center\"\n            />\n          </>\n        ) : (\n          visibleContacts?.map(({ id, name, number }) => (\n            <ContactItem key={id} id={id} name={name} number={number} />\n          ))\n        )}\n      </Flex>\n    </Box>\n  );\n};\n","import { createPortal } from 'react-dom';\nimport { useDisclosure, Button, Box, Flex } from '@chakra-ui/react';\n\nimport { Container } from 'components/utiles';\nimport { ContactForm } from 'components/ContactForm';\nimport { Filter } from 'components/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { ModalWrap } from 'components/ModalWrap/ModalWrap';\nimport { TbUserPlus } from 'react-icons/tb';\nimport { Spinner } from 'components/utiles/spinner';\nimport {\n  selectIsLoading,\n  selectError,\n} from 'components/redux/contacts/contactSelectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'components/redux/contacts/contactOperations';\nimport { useEffect } from 'react';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst ContactsPage = () => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Container>\n        <Box p=\"10px\" position=\"relative\">\n          <Button\n            variant=\"outline\"\n            position={'absolute'}\n            top=\"20px\"\n            right={'95px'}\n            colorScheme=\"teal\"\n            onClick={onOpen}\n            size=\"lg\"\n          >\n            <TbUserPlus enableBackground={'teal'} size=\"1.3em\" />\n          </Button>\n          <Flex justifyContent={'center'}>\n            <Filter />\n          </Flex>\n          {isLoading && !error && <Spinner />}\n          <ContactList />\n        </Box>\n        {createPortal(\n          <ModalWrap isOpen={isOpen} onClose={onClose}>\n            <ContactForm onClose={onClose} />\n          </ModalWrap>,\n          modalRoot\n        )}\n      </Container>\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectTextFilter","filter","value","initialValues","name","number","nameId","nanoid","numberId","ContactForm","onClose","useState","setName","setNumber","data","useSelector","dispatch","useDispatch","width","align","justifyContent","p","textAlign","my","onSubmit","_","resetForm","find","Notification","addContact","props","id","field","form","isRequired","isInvalid","errors","touched","I","type","placeholder","_placeholder","opacity","color","pattern","patternName","onChange","e","target","patern","mt","colorScheme","variant","filterId","Filter","setFilter","debounsedfilterValue","useDebounce","useEffect","chatngeFilterValue","display","flexDirection","fontSize","mb","as","currentTarget","toLowerCase","EditModal","prevName","prevNumber","editContact","modalRoot","document","querySelector","ContactItem","useDisclosure","isOpen","onOpen","loading","alignItems","size","gap","href","onClick","deleteContact","createPortal","ModalWrap","ContactList","visibleContacts","filterValue","contact","includes","getFilteredContacts","pt","length","src","GiffSadDog","alt","w","alignSelf","map","fetchContacts","position","top","right","enableBackground"],"sourceRoot":""}