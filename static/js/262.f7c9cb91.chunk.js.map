{"version":3,"file":"static/js/262.f7c9cb91.chunk.js","mappings":"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","sources":["components/redux/contacts/contactSelectors.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","hooks/useDebounce.js","components/EditModal/EditModal.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectTextFilter = state => state.filter.value;\n","import React from 'react';\nimport { nanoid } from 'nanoid';\nimport { Formik, Form, Field } from 'formik';\nimport { useState } from 'react';\nimport { selectContacts } from 'components/redux/contacts/contactSelectors';\n\nimport {\n  FormErrorMessage,\n  FormControl,\n  FormLabel,\n  Input,\n  Button,\n  Flex,\n  Box,\n  Heading,\n} from '@chakra-ui/react';\n\nimport { addContact } from 'components/redux/contacts/contactOperations';\n\nimport { Notification, patternName } from 'components/utiles';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nconst nameId = nanoid();\nconst numberId = nanoid();\n\nexport const ContactForm = ({ onClose }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const data = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const formSubmitHandler = (_, { resetForm }) => {\n    const invalidName = data?.find(state => state.name === name);\n\n    if (invalidName) {\n      Notification(name);\n      resetForm();\n      return;\n    }\n    dispatch(addContact({ name, number }));\n    onClose();\n    resetForm();\n  };\n  return (\n    <Flex width=\"full\" align=\"center\" justifyContent=\"center\">\n      <Box p={2}>\n        <Box textAlign=\"center\">\n          <Heading fontSize={['xl', '2xl', '3xl']}>Add new contact</Heading>\n        </Box>\n        <Box my={4} textAlign=\"left\">\n          <Formik initialValues={initialValues} onSubmit={formSubmitHandler}>\n            {props => (\n              <Form>\n                <Field name=\"name\" id={nameId}>\n                  {({ field, form }) => (\n                    <FormControl\n                      isRequired\n                      isInvalid={form.errors.name && form.touched.name}\n                    >\n                      <FormLabel fontSize={['sm', 'md', 'lg']}>Name</FormLabel>\n                      <Input\n                        {...field}\n                        value={name}\n                        type=\"text\"\n                        placeholder=\"John Doe\"\n                        fontSize={['sm', 'md', 'lg']}\n                        _placeholder={{ opacity: 1, color: 'teal.700' }}\n                        pattern={patternName}\n                        onChange={e => setName(e.target.value)}\n                      />\n                      <FormErrorMessage>{form.errors.name}</FormErrorMessage>\n                    </FormControl>\n                  )}\n                </Field>\n                <Field name=\"number\" patern={patternName} id={numberId}>\n                  {({ field, form }) => (\n                    <FormControl\n                      isRequired\n                      mt={4}\n                      isInvalid={form.errors.name && form.touched.name}\n                    >\n                      <FormLabel fontSize={['sm', 'md', 'lg']}>\n                        Nunber\n                      </FormLabel>\n                      <Input\n                        fontSize={['sm', 'md', 'lg']}\n                        {...field}\n                        value={number}\n                        type=\"telephone\"\n                        placeholder=\"0960000000\"\n                        _placeholder={{ opacity: 1, color: 'teal.700' }}\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        onChange={e => setNumber(e.target.value)}\n                      />\n                      <FormErrorMessage>{form.errors.name}</FormErrorMessage>\n                    </FormControl>\n                  )}\n                </Field>\n                <Button\n                  type=\"submit\"\n                  colorScheme=\"yellow\"\n                  variant=\"outline\"\n                  width=\"full\"\n                  mt={6}\n                  fontSize={['sm', 'md', 'lg']}\n                >\n                  Submit\n                </Button>\n              </Form>\n            )}\n          </Formik>\n        </Box>\n      </Box>\n    </Flex>\n  );\n};\n","import { nanoid } from 'nanoid';\nimport { useDispatch } from 'react-redux';\nimport { chatngeFilterValue } from '../redux/contacts/filterSlice';\nimport { useState, useEffect } from 'react';\nimport { useDebounce } from 'hooks/useDebounce';\nimport { Box, Text, Input } from '@chakra-ui/react';\nimport { useColorMode } from '@chakra-ui/react';\n\nconst filterId = nanoid();\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const [filter, setFilter] = useState('');\n  const debounsedfilterValue = useDebounce(filter, 500);\n  const { colorMode } = useColorMode();\n\n  useEffect(() => {\n    dispatch(chatngeFilterValue(debounsedfilterValue));\n  }, [debounsedfilterValue, dispatch]);\n\n  const handleFilterChange = e => {\n    setFilter(e.currentTarget.value.toLowerCase());\n  };\n  return (\n    <Box display=\"flex\" flexDirection=\"column\">\n      <Text fontSize={['sm', 'md', 'xl']} mb=\"10px\" as=\"cite\">\n        Finde contact by name\n      </Text>\n      <Input\n        variant=\"flushed\"\n        placeholder=\"John Doe\"\n        _placeholder={{ opacity: 1, color: 'teal.700' }}\n        width={{ base: '200px', md: '300px', xl: '400px' }}\n        value={filter}\n        type=\"text\"\n        id={filterId}\n        fontSize={['sm', 'md', 'xl']}\n        onChange={handleFilterChange}\n        color=\"rgb(17, 17, 17)\"\n        borderColor={\n          colorMode === 'light'\n            ? 'rgba(0, 0, 0, 0.5)'\n            : 'rgba(255, 255, 255, 0.3)'\n        }\n      />\n    </Box>\n  );\n};\n","import { useEffect, useState } from 'react';\n\nexport function useDebounce(value, delay) {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n    return () => {\n      clearTimeout(handler);\n    };\n  });\n  return debouncedValue;\n}\n","import React from 'react';\nimport { nanoid } from 'nanoid';\nimport { Formik, Form, Field } from 'formik';\nimport { useState } from 'react';\n\nimport {\n  FormControl,\n  FormLabel,\n  Input,\n  Button,\n  Flex,\n  Box,\n  Heading,\n} from '@chakra-ui/react';\n\nimport { editContact } from 'components/redux/contacts/contactOperations';\nimport { patternName } from 'components/utiles';\nimport { useDispatch } from 'react-redux';\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nconst nameId = nanoid();\nconst numberId = nanoid();\n\nexport const EditModal = ({\n  onClose,\n  name: prevName,\n  number: prevNumber,\n  id,\n}) => {\n  const [name, setName] = useState(prevName);\n  const [number, setNumber] = useState(prevNumber);\n  const dispatch = useDispatch();\n\n  const formSubmitHandler = (_, { resetForm }) => {\n    dispatch(editContact({ name, number, id }));\n    onClose();\n    resetForm();\n  };\n  return (\n    <Flex width=\"full\" align=\"center\" justifyContent=\"center\">\n      <Box p={2}>\n        <Box textAlign=\"center\">\n          <Heading fontSize={['xl', '2xl', '3xl']}>Edit contact</Heading>\n        </Box>\n        <Box my={4} textAlign=\"left\">\n          <Formik initialValues={initialValues} onSubmit={formSubmitHandler}>\n            {props => (\n              <Form>\n                <Field name=\"name\" id={nameId}>\n                  {({ field, form }) => (\n                    <FormControl\n                      isRequired\n                      isInvalid={form.errors.name && form.touched.name}\n                    >\n                      <FormLabel fontSize={['sm', 'md', 'lg']}>Name</FormLabel>\n                      <Input\n                        {...field}\n                        value={name}\n                        type=\"text\"\n                        placeholder=\"John Doe\"\n                        _placeholder={{ opacity: 1, color: 'teal.700' }}\n                        pattern={patternName}\n                        fontSize={['sm', 'md', 'lg']}\n                        onChange={e => setName(e.target.value)}\n                      />\n                    </FormControl>\n                  )}\n                </Field>\n                <Field name=\"number\" patern={patternName} id={numberId}>\n                  {({ field, form }) => (\n                    <FormControl\n                      isRequired\n                      mt={4}\n                      isInvalid={form.errors.name && form.touched.name}\n                    >\n                      <FormLabel fontSize={['sm', 'md', 'lg']}>\n                        Nunber\n                      </FormLabel>\n                      <Input\n                        {...field}\n                        value={number}\n                        type=\"telephone\"\n                        fontSize={['sm', 'md', 'lg']}\n                        placeholder=\"0960000000\"\n                        _placeholder={{ opacity: 1, color: 'teal.700' }}\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        onChange={e => setNumber(e.target.value)}\n                      />\n                    </FormControl>\n                  )}\n                </Field>\n                <Button\n                  type=\"submit\"\n                  colorScheme=\"yellow\"\n                  variant=\"outline\"\n                  width=\"full\"\n                  fontSize={['sm', 'md', 'lg']}\n                  mt={6}\n                >\n                  Submit\n                </Button>\n              </Form>\n            )}\n          </Formik>\n        </Box>\n      </Box>\n    </Flex>\n  );\n};\n","import { Avatar, Button, Flex, Text, useDisclosure } from '@chakra-ui/react';\nimport { RiEditLine } from 'react-icons/ri';\nimport { BiPhoneCall } from 'react-icons/bi';\nimport { createPortal } from 'react-dom';\nimport { ModalWrap } from 'components/ModalWrap/ModalWrap';\nimport { EditModal } from 'components/EditModal/EditModal';\nimport { deleteContact } from 'components/redux/contacts/contactOperations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectIsLoading } from 'components/redux/contacts/contactSelectors';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const ContactItem = ({ id, name, number }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const loading = useSelector(selectIsLoading);\n  const dispatch = useDispatch();\n  return (\n    <Flex key={id} alignItems=\"center\" justifyContent={'space-between'}>\n      <Avatar name={name} colorScheme=\"twitter\" size={['sm', 'md', 'md']} />\n      <Text fontSize={['sm', 'md', 'xl']} as=\"cite\">\n        {' '}\n        {name}:\n      </Text>\n      <Text fontSize={['sm', 'md', 'xl']}> {number}</Text>\n      <Flex gap={{ base: '5px', md: '15px', xl: '20px' }}>\n        <Button\n          variant=\"outline\"\n          colorScheme=\"teal\"\n          padding={['5px', '10px', '13px']}\n          size={['xs', 'md', 'xl']}\n          fontSize={['sm', 'md', 'md']}\n        >\n          <a href={`tel:${number}`}>\n            <BiPhoneCall />\n          </a>\n        </Button>\n        <Button\n          padding={['5px', '10px', '13px']}\n          fontSize={['sm', 'md', 'lg']}\n          size={['xs', 'md', 'xl']}\n          isLoading={loading}\n          colorScheme=\"red\"\n          variant=\"outline\"\n          onClick={() => dispatch(deleteContact(id))}\n        >\n          Delete\n        </Button>\n        <Button\n          onClick={onOpen}\n          variant=\"outline\"\n          colorScheme=\"yellow\"\n          size={['xs', 'md', 'xl']}\n          padding={['5px', '10px', '13px']}\n        >\n          <RiEditLine />\n        </Button>\n      </Flex>\n      {createPortal(\n        <ModalWrap isOpen={isOpen} onClose={onClose}>\n          <EditModal onClose={onClose} name={name} number={number} id={id} />\n        </ModalWrap>,\n        modalRoot\n      )}\n    </Flex>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { selectTextFilter } from 'components/redux/contacts/contactSelectors';\nimport { selectContacts } from 'components/redux/contacts/contactSelectors';\nimport GiffSadDog from '../../images/sad-dog.gif';\n\nimport { Box, Flex, Image, Text } from '@chakra-ui/react';\nimport { ContactItem } from 'components/ContactItem/ContactItem';\n\nconst getFilteredContacts = (contacts, filterValue) => {\n  if (filterValue === '') {\n    return contacts;\n  }\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filterValue)\n  );\n};\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filterValue = useSelector(selectTextFilter);\n\n  const visibleContacts = getFilteredContacts(contacts, filterValue);\n\n  return (\n    <Box\n      p={{ base: '0', md: '10px', xl: '10px' }}\n      paddingTop={{ base: '30px', md: '40px', xl: '40px' }}\n    >\n      <Flex gap={'20px'} flexDirection=\"column\">\n        {visibleContacts?.length === 0 ? (\n          <>\n            <Text textAlign=\"center\" as=\"cite\" size=\"xl\">\n              There are no contacts here yet\n            </Text>\n            <Image\n              src={GiffSadDog}\n              alt=\"Sad dog\"\n              w={'500px'}\n              alignSelf=\"center\"\n            />\n          </>\n        ) : (\n          visibleContacts?.map(({ id, name, number }) => (\n            <ContactItem key={id} id={id} name={name} number={number} />\n          ))\n        )}\n      </Flex>\n    </Box>\n  );\n};\n","import { createPortal } from 'react-dom';\nimport { useDisclosure, Button, Box, Flex } from '@chakra-ui/react';\n\nimport { Container } from 'components/utiles';\nimport { ContactForm } from 'components/ContactForm';\nimport { Filter } from 'components/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { ModalWrap } from 'components/ModalWrap/ModalWrap';\nimport { TbUserPlus } from 'react-icons/tb';\nimport { Spinner } from 'components/utiles/spinner';\nimport {\n  selectIsLoading,\n  selectError,\n} from 'components/redux/contacts/contactSelectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'components/redux/contacts/contactOperations';\nimport { useEffect } from 'react';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst ContactsPage = () => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Container>\n        <Box p=\"10px\" position=\"relative\">\n          <Button\n            variant=\"outline\"\n            position={'absolute'}\n            top=\"20px\"\n            right={['0', '0', '10px']}\n            colorScheme=\"teal\"\n            onClick={onOpen}\n            size={['sm', 'md', 'xl']}\n            padding={['5px', '10px', '15px']}\n          >\n            <TbUserPlus enableBackground={'teal'} size=\"1.3em\" />\n          </Button>\n          <Flex justifyContent={'center'}>\n            <Filter />\n          </Flex>\n          {isLoading && !error && <Spinner />}\n          <ContactList />\n        </Box>\n        {createPortal(\n          <ModalWrap isOpen={isOpen} onClose={onClose}>\n            <ContactForm onClose={onClose} />\n          </ModalWrap>,\n          modalRoot\n        )}\n      </Container>\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectTextFilter","filter","value","initialValues","name","number","nameId","nanoid","numberId","ContactForm","onClose","useState","setName","setNumber","data","useSelector","dispatch","useDispatch","width","align","justifyContent","p","textAlign","fontSize","my","onSubmit","_","resetForm","find","Notification","addContact","props","id","field","form","isRequired","isInvalid","errors","touched","I","type","placeholder","_placeholder","opacity","color","pattern","patternName","onChange","e","target","patern","mt","colorScheme","variant","filterId","Filter","setFilter","debounsedfilterValue","delay","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useDebounce","colorMode","useColorMode","chatngeFilterValue","display","flexDirection","mb","as","base","md","xl","currentTarget","toLowerCase","borderColor","EditModal","prevName","prevNumber","editContact","modalRoot","document","querySelector","ContactItem","useDisclosure","isOpen","onOpen","loading","alignItems","size","gap","padding","href","onClick","deleteContact","createPortal","ModalWrap","ContactList","visibleContacts","filterValue","contact","includes","getFilteredContacts","paddingTop","length","src","GiffSadDog","alt","w","alignSelf","map","fetchContacts","position","top","right","enableBackground"],"sourceRoot":""}